# Switch Paralympic Committee of India to Real Domain
# Use this script tomorrow when you're ready to go live

param(
    [Parameter(Mandatory=$false)]
    [string]$RealDomain = "www.paralympicindia.com",
    
    [Parameter(Mandatory=$false)]
    [string]$Environment = "production"
)

Write-Host "üèÜ Switching Paralympic Committee of India to REAL domain" -ForegroundColor Green
Write-Host "Domain: $RealDomain" -ForegroundColor Cyan
Write-Host "Environment: $Environment" -ForegroundColor Cyan

Write-Host "`n‚ö†Ô∏è  IMPORTANT: Make sure DNS is already pointing to AKS ingress IP!" -ForegroundColor Red

$confirm = Read-Host "Have you updated DNS records? (yes/no)"
if ($confirm -ne "yes") {
    Write-Host "‚ùå Please update DNS first, then run this script again" -ForegroundColor Red
    Write-Host "`nüìã Steps to update DNS:" -ForegroundColor Yellow
    Write-Host "1. Get ingress IP: kubectl get ingress -n pci-production" -ForegroundColor White
    Write-Host "2. Update DNS A record: $RealDomain ‚Üí <ingress-ip>" -ForegroundColor White
    Write-Host "3. Wait 5-10 minutes for DNS propagation" -ForegroundColor White
    exit 0
}

Write-Host "`nüîÑ Updating configurations for real domain..." -ForegroundColor Yellow

# Update backend config
$backendConfigFile = "k8s\overlays\production\backend-configmap-patch.yaml"
(Get-Content $backendConfigFile) -replace "https://[^/]+", "https://$RealDomain" | Set-Content $backendConfigFile

# Update frontend config
$frontendConfigFile = "k8s\overlays\production\frontend-configmap-patch.yaml"
(Get-Content $frontendConfigFile) -replace "https://[^/]+", "https://$RealDomain" | Set-Content $frontendConfigFile

# Update ingress
$ingressFile = "k8s\base\ingress.yaml"
(Get-Content $ingressFile) -replace "host: [^\s]+", "host: $RealDomain" | Set-Content $ingressFile

# Update cert issuer back to production Let's Encrypt
$certFile = "k8s\overlays\production\cert-issuer.yaml"
$content = Get-Content $certFile
$content = $content -replace "letsencrypt-staging", "letsencrypt-prod"
$content = $content -replace "https://acme-staging-v02.api.letsencrypt.org/directory", "https://acme-v02.api.letsencrypt.org/directory"
$content | Set-Content $certFile

Write-Host "‚úÖ Configurations updated for real domain" -ForegroundColor Green

# Apply the changes
Write-Host "`nüöÄ Applying changes to Kubernetes..." -ForegroundColor Yellow

# Get cluster credentials based on environment
if ($Environment -eq "production") {
    az aks get-credentials --resource-group PCI-prod --name pci-production-aks --overwrite-existing
    $namespace = "pci-production"
} else {
    az aks get-credentials --resource-group PCI --name pci-staging-aks --overwrite-existing  
    $namespace = "pci-staging"
}

# Apply updated configurations
kubectl apply -k "k8s/overlays/$Environment" --namespace=$namespace

# Apply cert issuer
kubectl apply -f "k8s/overlays/production/cert-issuer.yaml"

Write-Host "`n‚è≥ Waiting for SSL certificate generation..." -ForegroundColor Yellow
Write-Host "This may take 2-5 minutes for Let's Encrypt..." -ForegroundColor Cyan

# Check certificate status
Start-Sleep -Seconds 30
kubectl get certificate -n $namespace

Write-Host "`nüéØ =================================" -ForegroundColor Green
Write-Host "üèÜ Paralympic Committee of India" -ForegroundColor Green  
Write-Host "‚úÖ LIVE on Real Domain!" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green

Write-Host "`nüåê Website URL: https://$RealDomain" -ForegroundColor Cyan
Write-Host "üîí SSL Certificate: Auto-generated by Let's Encrypt" -ForegroundColor Cyan

Write-Host "`nüìä Verification Steps:" -ForegroundColor Yellow
Write-Host "1. Check website: https://$RealDomain" -ForegroundColor White
Write-Host "2. Verify SSL: kubectl get certificate -n $namespace" -ForegroundColor White  
Write-Host "3. Check ingress: kubectl get ingress -n $namespace" -ForegroundColor White
Write-Host "4. Monitor pods: kubectl get pods -n $namespace" -ForegroundColor White

Write-Host "`nüéâ Paralympic Committee of India is now LIVE!" -ForegroundColor Green
